digraph graphname {
n25870 [shape=box,label="(25870)\nreturn cast this"];
n25869 [shape=box,label="(25869)"];
n25868 [shape=box,label="(25868)"];
n25867 [shape=box,label="(25867)"];
n25866 [shape=box,label="(25866)"];
n25865 [shape=box,label="(25865)\nvar tmp = (tmp) << 24\nthis = this | tmp"];
n25864 [shape=box,label="(25864)"];
n25863 [shape=box,label="(25863)\ntmp = Value"];
n25862 [shape=box,label="(25862)\ntmp = 0"];
n25861 [shape=box,label="(25861)\nvar tmp = Value < 0\n@:cond-branch tmp"];
n25861 -> n25862[style="dashed",color="gray",label="then"];
n25861 -> n25863[style="dashed",color="gray",label="else"];
n25861 -> n25864[style="dashed",color="gray",label="next"];
n25860 [shape=box,label="(25860)\ntmp = 255"];
n25859 [shape=box,label="(25859)\nvar tmp = Alpha * 255\nvar Value = Math.round(tmp)\nthis = Std.int(cast cast cast cast cast this)\nthis = this & 16777215\nvar tmp\nvar tmp = Value > 255\n@:cond-branch tmp"];
n25859 -> n25860[style="dashed",color="gray",label="then"];
n25859 -> n25861[style="dashed",color="gray",label="else"];
n25859 -> n25865[style="dashed",color="gray",label="next"];
n25858 [shape=box,label="(25858)"];
n25858 -> n25859[style="dashed",color="gray",label="sub"];
n25858 -> n25866[style="dashed",color="gray",label="next"];
n25857 [shape=box,label="(25857)"];
n25857 -> n25858[style="dashed",color="gray",label="sub"];
n25857 -> n25867[style="dashed",color="gray",label="next"];
n25856 [shape=box,label="(25856)"];
n25855 [shape=box,label="(25855)\nthis = this | tmp"];
n25854 [shape=box,label="(25854)"];
n25853 [shape=box,label="(25853)\ntmp = Value"];
n25852 [shape=box,label="(25852)\ntmp = 0"];
n25851 [shape=box,label="(25851)\nvar tmp = Value < 0\n@:cond-branch tmp"];
n25851 -> n25852[style="dashed",color="gray",label="then"];
n25851 -> n25853[style="dashed",color="gray",label="else"];
n25851 -> n25854[style="dashed",color="gray",label="next"];
n25850 [shape=box,label="(25850)\ntmp = 255"];
n25849 [shape=box,label="(25849)\nvar tmp = mid * 255\nvar Value = Math.round(tmp)\nthis = Std.int(cast cast cast cast cast this)\nthis = this & -256\nvar tmp\nvar tmp = Value > 255\n@:cond-branch tmp"];
n25849 -> n25850[style="dashed",color="gray",label="then"];
n25849 -> n25851[style="dashed",color="gray",label="else"];
n25849 -> n25855[style="dashed",color="gray",label="next"];
n25848 [shape=box,label="(25848)"];
n25848 -> n25849[style="dashed",color="gray",label="sub"];
n25848 -> n25856[style="dashed",color="gray",label="next"];
n25847 [shape=box,label="(25847)"];
n25847 -> n25848[style="dashed",color="gray",label="sub"];
n25847 -> n25857[style="dashed",color="gray",label="next"];
n25846 [shape=box,label="(25846)"];
n25845 [shape=box,label="(25845)\nvar tmp = (tmp) << 8\nthis = this | tmp"];
n25844 [shape=box,label="(25844)"];
n25843 [shape=box,label="(25843)\ntmp = Value"];
n25842 [shape=box,label="(25842)\ntmp = 0"];
n25841 [shape=box,label="(25841)\nvar tmp = Value < 0\n@:cond-branch tmp"];
n25841 -> n25842[style="dashed",color="gray",label="then"];
n25841 -> n25843[style="dashed",color="gray",label="else"];
n25841 -> n25844[style="dashed",color="gray",label="next"];
n25840 [shape=box,label="(25840)\ntmp = 255"];
n25839 [shape=box,label="(25839)\nvar tmp = match * 255\nvar Value = Math.round(tmp)\nthis = Std.int(cast cast cast cast cast this)\nthis = this & -65281\nvar tmp\nvar tmp = Value > 255\n@:cond-branch tmp"];
n25839 -> n25840[style="dashed",color="gray",label="then"];
n25839 -> n25841[style="dashed",color="gray",label="else"];
n25839 -> n25845[style="dashed",color="gray",label="next"];
n25838 [shape=box,label="(25838)"];
n25838 -> n25839[style="dashed",color="gray",label="sub"];
n25838 -> n25846[style="dashed",color="gray",label="next"];
n25837 [shape=box,label="(25837)"];
n25837 -> n25838[style="dashed",color="gray",label="sub"];
n25837 -> n25847[style="dashed",color="gray",label="next"];
n25836 [shape=box,label="(25836)"];
n25835 [shape=box,label="(25835)\nvar tmp = (tmp) << 16\nthis = this | tmp"];
n25834 [shape=box,label="(25834)"];
n25833 [shape=box,label="(25833)\ntmp = Value"];
n25832 [shape=box,label="(25832)\ntmp = 0"];
n25831 [shape=box,label="(25831)\nvar tmp = Value < 0\n@:cond-branch tmp"];
n25831 -> n25832[style="dashed",color="gray",label="then"];
n25831 -> n25833[style="dashed",color="gray",label="else"];
n25831 -> n25834[style="dashed",color="gray",label="next"];
n25830 [shape=box,label="(25830)\ntmp = 255"];
n25829 [shape=box,label="(25829)\nvar tmp = Chroma * 255\nvar Value = Math.round(tmp)\nthis = Std.int(cast cast cast cast cast this)\nthis = this & -16711681\nvar tmp\nvar tmp = Value > 255\n@:cond-branch tmp"];
n25829 -> n25830[style="dashed",color="gray",label="then"];
n25829 -> n25831[style="dashed",color="gray",label="else"];
n25829 -> n25835[style="dashed",color="gray",label="next"];
n25828 [shape=box,label="(25828)"];
n25828 -> n25829[style="dashed",color="gray",label="sub"];
n25828 -> n25836[style="dashed",color="gray",label="next"];
n25827 [shape=box,label="(25827)"];
n25827 -> n25828[style="dashed",color="gray",label="sub"];
n25827 -> n25837[style="dashed",color="gray",label="next"];
n25826 [shape=box,label="(25826)"];
n25826 -> n25827[style="dashed",color="gray",label="sub"];
n25826 -> n25868[style="dashed",color="gray",label="next"];
n25825 [shape=box,label="(25825)"];
n25824 [shape=box,label="(25824)"];
n25823 [shape=box,label="(25823)"];
n25822 [shape=box,label="(25822)\nvar tmp = (tmp) << 24\nthis = this | tmp"];
n25821 [shape=box,label="(25821)"];
n25820 [shape=box,label="(25820)\ntmp = Value"];
n25819 [shape=box,label="(25819)\ntmp = 0"];
n25818 [shape=box,label="(25818)\nvar tmp = Value < 0\n@:cond-branch tmp"];
n25818 -> n25819[style="dashed",color="gray",label="then"];
n25818 -> n25820[style="dashed",color="gray",label="else"];
n25818 -> n25821[style="dashed",color="gray",label="next"];
n25817 [shape=box,label="(25817)\ntmp = 255"];
n25816 [shape=box,label="(25816)\nvar tmp = Alpha * 255\nvar Value = Math.round(tmp)\nthis = Std.int(cast cast cast cast cast this)\nthis = this & 16777215\nvar tmp\nvar tmp = Value > 255\n@:cond-branch tmp"];
n25816 -> n25817[style="dashed",color="gray",label="then"];
n25816 -> n25818[style="dashed",color="gray",label="else"];
n25816 -> n25822[style="dashed",color="gray",label="next"];
n25815 [shape=box,label="(25815)"];
n25815 -> n25816[style="dashed",color="gray",label="sub"];
n25815 -> n25823[style="dashed",color="gray",label="next"];
n25814 [shape=box,label="(25814)"];
n25814 -> n25815[style="dashed",color="gray",label="sub"];
n25814 -> n25824[style="dashed",color="gray",label="next"];
n25813 [shape=box,label="(25813)"];
n25812 [shape=box,label="(25812)\nthis = this | tmp"];
n25811 [shape=box,label="(25811)"];
n25810 [shape=box,label="(25810)\ntmp = Value"];
n25809 [shape=box,label="(25809)\ntmp = 0"];
n25808 [shape=box,label="(25808)\nvar tmp = Value < 0\n@:cond-branch tmp"];
n25808 -> n25809[style="dashed",color="gray",label="then"];
n25808 -> n25810[style="dashed",color="gray",label="else"];
n25808 -> n25811[style="dashed",color="gray",label="next"];
n25807 [shape=box,label="(25807)\ntmp = 255"];
n25806 [shape=box,label="(25806)\nvar tmp = Chroma * 255\nvar Value = Math.round(tmp)\nthis = Std.int(cast cast cast cast cast this)\nthis = this & -256\nvar tmp\nvar tmp = Value > 255\n@:cond-branch tmp"];
n25806 -> n25807[style="dashed",color="gray",label="then"];
n25806 -> n25808[style="dashed",color="gray",label="else"];
n25806 -> n25812[style="dashed",color="gray",label="next"];
n25805 [shape=box,label="(25805)"];
n25805 -> n25806[style="dashed",color="gray",label="sub"];
n25805 -> n25813[style="dashed",color="gray",label="next"];
n25804 [shape=box,label="(25804)"];
n25804 -> n25805[style="dashed",color="gray",label="sub"];
n25804 -> n25814[style="dashed",color="gray",label="next"];
n25803 [shape=box,label="(25803)"];
n25802 [shape=box,label="(25802)\nvar tmp = (tmp) << 8\nthis = this | tmp"];
n25801 [shape=box,label="(25801)"];
n25800 [shape=box,label="(25800)\ntmp = Value"];
n25799 [shape=box,label="(25799)\ntmp = 0"];
n25798 [shape=box,label="(25798)\nvar tmp = Value < 0\n@:cond-branch tmp"];
n25798 -> n25799[style="dashed",color="gray",label="then"];
n25798 -> n25800[style="dashed",color="gray",label="else"];
n25798 -> n25801[style="dashed",color="gray",label="next"];
n25797 [shape=box,label="(25797)\ntmp = 255"];
n25796 [shape=box,label="(25796)\nvar tmp = match * 255\nvar Value = Math.round(tmp)\nthis = Std.int(cast cast cast cast cast this)\nthis = this & -65281\nvar tmp\nvar tmp = Value > 255\n@:cond-branch tmp"];
n25796 -> n25797[style="dashed",color="gray",label="then"];
n25796 -> n25798[style="dashed",color="gray",label="else"];
n25796 -> n25802[style="dashed",color="gray",label="next"];
n25795 [shape=box,label="(25795)"];
n25795 -> n25796[style="dashed",color="gray",label="sub"];
n25795 -> n25803[style="dashed",color="gray",label="next"];
n25794 [shape=box,label="(25794)"];
n25794 -> n25795[style="dashed",color="gray",label="sub"];
n25794 -> n25804[style="dashed",color="gray",label="next"];
n25793 [shape=box,label="(25793)"];
n25792 [shape=box,label="(25792)\nvar tmp = (tmp) << 16\nthis = this | tmp"];
n25791 [shape=box,label="(25791)"];
n25790 [shape=box,label="(25790)\ntmp = Value"];
n25789 [shape=box,label="(25789)\ntmp = 0"];
n25788 [shape=box,label="(25788)\nvar tmp = Value < 0\n@:cond-branch tmp"];
n25788 -> n25789[style="dashed",color="gray",label="then"];
n25788 -> n25790[style="dashed",color="gray",label="else"];
n25788 -> n25791[style="dashed",color="gray",label="next"];
n25787 [shape=box,label="(25787)\ntmp = 255"];
n25786 [shape=box,label="(25786)\nvar tmp = mid * 255\nvar Value = Math.round(tmp)\nthis = Std.int(cast cast cast cast cast this)\nthis = this & -16711681\nvar tmp\nvar tmp = Value > 255\n@:cond-branch tmp"];
n25786 -> n25787[style="dashed",color="gray",label="then"];
n25786 -> n25788[style="dashed",color="gray",label="else"];
n25786 -> n25792[style="dashed",color="gray",label="next"];
n25785 [shape=box,label="(25785)"];
n25785 -> n25786[style="dashed",color="gray",label="sub"];
n25785 -> n25793[style="dashed",color="gray",label="next"];
n25784 [shape=box,label="(25784)"];
n25784 -> n25785[style="dashed",color="gray",label="sub"];
n25784 -> n25794[style="dashed",color="gray",label="next"];
n25783 [shape=box,label="(25783)"];
n25783 -> n25784[style="dashed",color="gray",label="sub"];
n25783 -> n25825[style="dashed",color="gray",label="next"];
n25782 [shape=box,label="(25782)"];
n25781 [shape=box,label="(25781)"];
n25780 [shape=box,label="(25780)"];
n25779 [shape=box,label="(25779)\nvar tmp = (tmp) << 24\nthis = this | tmp"];
n25778 [shape=box,label="(25778)"];
n25777 [shape=box,label="(25777)\ntmp = Value"];
n25776 [shape=box,label="(25776)\ntmp = 0"];
n25775 [shape=box,label="(25775)\nvar tmp = Value < 0\n@:cond-branch tmp"];
n25775 -> n25776[style="dashed",color="gray",label="then"];
n25775 -> n25777[style="dashed",color="gray",label="else"];
n25775 -> n25778[style="dashed",color="gray",label="next"];
n25774 [shape=box,label="(25774)\ntmp = 255"];
n25773 [shape=box,label="(25773)\nvar tmp = Alpha * 255\nvar Value = Math.round(tmp)\nthis = Std.int(cast cast cast cast cast this)\nthis = this & 16777215\nvar tmp\nvar tmp = Value > 255\n@:cond-branch tmp"];
n25773 -> n25774[style="dashed",color="gray",label="then"];
n25773 -> n25775[style="dashed",color="gray",label="else"];
n25773 -> n25779[style="dashed",color="gray",label="next"];
n25772 [shape=box,label="(25772)"];
n25772 -> n25773[style="dashed",color="gray",label="sub"];
n25772 -> n25780[style="dashed",color="gray",label="next"];
n25771 [shape=box,label="(25771)"];
n25771 -> n25772[style="dashed",color="gray",label="sub"];
n25771 -> n25781[style="dashed",color="gray",label="next"];
n25770 [shape=box,label="(25770)"];
n25769 [shape=box,label="(25769)\nthis = this | tmp"];
n25768 [shape=box,label="(25768)"];
n25767 [shape=box,label="(25767)\ntmp = Value"];
n25766 [shape=box,label="(25766)\ntmp = 0"];
n25765 [shape=box,label="(25765)\nvar tmp = Value < 0\n@:cond-branch tmp"];
n25765 -> n25766[style="dashed",color="gray",label="then"];
n25765 -> n25767[style="dashed",color="gray",label="else"];
n25765 -> n25768[style="dashed",color="gray",label="next"];
n25764 [shape=box,label="(25764)\ntmp = 255"];
n25763 [shape=box,label="(25763)\nvar tmp = Chroma * 255\nvar Value = Math.round(tmp)\nthis = Std.int(cast cast cast cast cast this)\nthis = this & -256\nvar tmp\nvar tmp = Value > 255\n@:cond-branch tmp"];
n25763 -> n25764[style="dashed",color="gray",label="then"];
n25763 -> n25765[style="dashed",color="gray",label="else"];
n25763 -> n25769[style="dashed",color="gray",label="next"];
n25762 [shape=box,label="(25762)"];
n25762 -> n25763[style="dashed",color="gray",label="sub"];
n25762 -> n25770[style="dashed",color="gray",label="next"];
n25761 [shape=box,label="(25761)"];
n25761 -> n25762[style="dashed",color="gray",label="sub"];
n25761 -> n25771[style="dashed",color="gray",label="next"];
n25760 [shape=box,label="(25760)"];
n25759 [shape=box,label="(25759)\nvar tmp = (tmp) << 8\nthis = this | tmp"];
n25758 [shape=box,label="(25758)"];
n25757 [shape=box,label="(25757)\ntmp = Value"];
n25756 [shape=box,label="(25756)\ntmp = 0"];
n25755 [shape=box,label="(25755)\nvar tmp = Value < 0\n@:cond-branch tmp"];
n25755 -> n25756[style="dashed",color="gray",label="then"];
n25755 -> n25757[style="dashed",color="gray",label="else"];
n25755 -> n25758[style="dashed",color="gray",label="next"];
n25754 [shape=box,label="(25754)\ntmp = 255"];
n25753 [shape=box,label="(25753)\nvar tmp = mid * 255\nvar Value = Math.round(tmp)\nthis = Std.int(cast cast cast cast cast this)\nthis = this & -65281\nvar tmp\nvar tmp = Value > 255\n@:cond-branch tmp"];
n25753 -> n25754[style="dashed",color="gray",label="then"];
n25753 -> n25755[style="dashed",color="gray",label="else"];
n25753 -> n25759[style="dashed",color="gray",label="next"];
n25752 [shape=box,label="(25752)"];
n25752 -> n25753[style="dashed",color="gray",label="sub"];
n25752 -> n25760[style="dashed",color="gray",label="next"];
n25751 [shape=box,label="(25751)"];
n25751 -> n25752[style="dashed",color="gray",label="sub"];
n25751 -> n25761[style="dashed",color="gray",label="next"];
n25750 [shape=box,label="(25750)"];
n25749 [shape=box,label="(25749)\nvar tmp = (tmp) << 16\nthis = this | tmp"];
n25748 [shape=box,label="(25748)"];
n25747 [shape=box,label="(25747)\ntmp = Value"];
n25746 [shape=box,label="(25746)\ntmp = 0"];
n25745 [shape=box,label="(25745)\nvar tmp = Value < 0\n@:cond-branch tmp"];
n25745 -> n25746[style="dashed",color="gray",label="then"];
n25745 -> n25747[style="dashed",color="gray",label="else"];
n25745 -> n25748[style="dashed",color="gray",label="next"];
n25744 [shape=box,label="(25744)\ntmp = 255"];
n25743 [shape=box,label="(25743)\nvar tmp = match * 255\nvar Value = Math.round(tmp)\nthis = Std.int(cast cast cast cast cast this)\nthis = this & -16711681\nvar tmp\nvar tmp = Value > 255\n@:cond-branch tmp"];
n25743 -> n25744[style="dashed",color="gray",label="then"];
n25743 -> n25745[style="dashed",color="gray",label="else"];
n25743 -> n25749[style="dashed",color="gray",label="next"];
n25742 [shape=box,label="(25742)"];
n25742 -> n25743[style="dashed",color="gray",label="sub"];
n25742 -> n25750[style="dashed",color="gray",label="next"];
n25741 [shape=box,label="(25741)"];
n25741 -> n25742[style="dashed",color="gray",label="sub"];
n25741 -> n25751[style="dashed",color="gray",label="next"];
n25740 [shape=box,label="(25740)"];
n25740 -> n25741[style="dashed",color="gray",label="sub"];
n25740 -> n25782[style="dashed",color="gray",label="next"];
n25739 [shape=box,label="(25739)"];
n25738 [shape=box,label="(25738)"];
n25737 [shape=box,label="(25737)"];
n25736 [shape=box,label="(25736)\nvar tmp = (tmp) << 24\nthis = this | tmp"];
n25735 [shape=box,label="(25735)"];
n25734 [shape=box,label="(25734)\ntmp = Value"];
n25733 [shape=box,label="(25733)\ntmp = 0"];
n25732 [shape=box,label="(25732)\nvar tmp = Value < 0\n@:cond-branch tmp"];
n25732 -> n25733[style="dashed",color="gray",label="then"];
n25732 -> n25734[style="dashed",color="gray",label="else"];
n25732 -> n25735[style="dashed",color="gray",label="next"];
n25731 [shape=box,label="(25731)\ntmp = 255"];
n25730 [shape=box,label="(25730)\nvar tmp = Alpha * 255\nvar Value = Math.round(tmp)\nthis = Std.int(cast cast cast cast cast this)\nthis = this & 16777215\nvar tmp\nvar tmp = Value > 255\n@:cond-branch tmp"];
n25730 -> n25731[style="dashed",color="gray",label="then"];
n25730 -> n25732[style="dashed",color="gray",label="else"];
n25730 -> n25736[style="dashed",color="gray",label="next"];
n25729 [shape=box,label="(25729)"];
n25729 -> n25730[style="dashed",color="gray",label="sub"];
n25729 -> n25737[style="dashed",color="gray",label="next"];
n25728 [shape=box,label="(25728)"];
n25728 -> n25729[style="dashed",color="gray",label="sub"];
n25728 -> n25738[style="dashed",color="gray",label="next"];
n25727 [shape=box,label="(25727)"];
n25726 [shape=box,label="(25726)\nthis = this | tmp"];
n25725 [shape=box,label="(25725)"];
n25724 [shape=box,label="(25724)\ntmp = Value"];
n25723 [shape=box,label="(25723)\ntmp = 0"];
n25722 [shape=box,label="(25722)\nvar tmp = Value < 0\n@:cond-branch tmp"];
n25722 -> n25723[style="dashed",color="gray",label="then"];
n25722 -> n25724[style="dashed",color="gray",label="else"];
n25722 -> n25725[style="dashed",color="gray",label="next"];
n25721 [shape=box,label="(25721)\ntmp = 255"];
n25720 [shape=box,label="(25720)\nvar tmp = mid * 255\nvar Value = Math.round(tmp)\nthis = Std.int(cast cast cast cast cast this)\nthis = this & -256\nvar tmp\nvar tmp = Value > 255\n@:cond-branch tmp"];
n25720 -> n25721[style="dashed",color="gray",label="then"];
n25720 -> n25722[style="dashed",color="gray",label="else"];
n25720 -> n25726[style="dashed",color="gray",label="next"];
n25719 [shape=box,label="(25719)"];
n25719 -> n25720[style="dashed",color="gray",label="sub"];
n25719 -> n25727[style="dashed",color="gray",label="next"];
n25718 [shape=box,label="(25718)"];
n25718 -> n25719[style="dashed",color="gray",label="sub"];
n25718 -> n25728[style="dashed",color="gray",label="next"];
n25717 [shape=box,label="(25717)"];
n25716 [shape=box,label="(25716)\nvar tmp = (tmp) << 8\nthis = this | tmp"];
n25715 [shape=box,label="(25715)"];
n25714 [shape=box,label="(25714)\ntmp = Value"];
n25713 [shape=box,label="(25713)\ntmp = 0"];
n25712 [shape=box,label="(25712)\nvar tmp = Value < 0\n@:cond-branch tmp"];
n25712 -> n25713[style="dashed",color="gray",label="then"];
n25712 -> n25714[style="dashed",color="gray",label="else"];
n25712 -> n25715[style="dashed",color="gray",label="next"];
n25711 [shape=box,label="(25711)\ntmp = 255"];
n25710 [shape=box,label="(25710)\nvar tmp = Chroma * 255\nvar Value = Math.round(tmp)\nthis = Std.int(cast cast cast cast cast this)\nthis = this & -65281\nvar tmp\nvar tmp = Value > 255\n@:cond-branch tmp"];
n25710 -> n25711[style="dashed",color="gray",label="then"];
n25710 -> n25712[style="dashed",color="gray",label="else"];
n25710 -> n25716[style="dashed",color="gray",label="next"];
n25709 [shape=box,label="(25709)"];
n25709 -> n25710[style="dashed",color="gray",label="sub"];
n25709 -> n25717[style="dashed",color="gray",label="next"];
n25708 [shape=box,label="(25708)"];
n25708 -> n25709[style="dashed",color="gray",label="sub"];
n25708 -> n25718[style="dashed",color="gray",label="next"];
n25707 [shape=box,label="(25707)"];
n25706 [shape=box,label="(25706)\nvar tmp = (tmp) << 16\nthis = this | tmp"];
n25705 [shape=box,label="(25705)"];
n25704 [shape=box,label="(25704)\ntmp = Value"];
n25703 [shape=box,label="(25703)\ntmp = 0"];
n25702 [shape=box,label="(25702)\nvar tmp = Value < 0\n@:cond-branch tmp"];
n25702 -> n25703[style="dashed",color="gray",label="then"];
n25702 -> n25704[style="dashed",color="gray",label="else"];
n25702 -> n25705[style="dashed",color="gray",label="next"];
n25701 [shape=box,label="(25701)\ntmp = 255"];
n25700 [shape=box,label="(25700)\nvar tmp = match * 255\nvar Value = Math.round(tmp)\nthis = Std.int(cast cast cast cast cast this)\nthis = this & -16711681\nvar tmp\nvar tmp = Value > 255\n@:cond-branch tmp"];
n25700 -> n25701[style="dashed",color="gray",label="then"];
n25700 -> n25702[style="dashed",color="gray",label="else"];
n25700 -> n25706[style="dashed",color="gray",label="next"];
n25699 [shape=box,label="(25699)"];
n25699 -> n25700[style="dashed",color="gray",label="sub"];
n25699 -> n25707[style="dashed",color="gray",label="next"];
n25698 [shape=box,label="(25698)"];
n25698 -> n25699[style="dashed",color="gray",label="sub"];
n25698 -> n25708[style="dashed",color="gray",label="next"];
n25697 [shape=box,label="(25697)"];
n25697 -> n25698[style="dashed",color="gray",label="sub"];
n25697 -> n25739[style="dashed",color="gray",label="next"];
n25696 [shape=box,label="(25696)"];
n25695 [shape=box,label="(25695)"];
n25694 [shape=box,label="(25694)"];
n25693 [shape=box,label="(25693)\nvar tmp = (tmp) << 24\nthis = this | tmp"];
n25692 [shape=box,label="(25692)"];
n25691 [shape=box,label="(25691)\ntmp = Value"];
n25690 [shape=box,label="(25690)\ntmp = 0"];
n25689 [shape=box,label="(25689)\nvar tmp = Value < 0\n@:cond-branch tmp"];
n25689 -> n25690[style="dashed",color="gray",label="then"];
n25689 -> n25691[style="dashed",color="gray",label="else"];
n25689 -> n25692[style="dashed",color="gray",label="next"];
n25688 [shape=box,label="(25688)\ntmp = 255"];
n25687 [shape=box,label="(25687)\nvar tmp = Alpha * 255\nvar Value = Math.round(tmp)\nthis = Std.int(cast cast cast cast cast this)\nthis = this & 16777215\nvar tmp\nvar tmp = Value > 255\n@:cond-branch tmp"];
n25687 -> n25688[style="dashed",color="gray",label="then"];
n25687 -> n25689[style="dashed",color="gray",label="else"];
n25687 -> n25693[style="dashed",color="gray",label="next"];
n25686 [shape=box,label="(25686)"];
n25686 -> n25687[style="dashed",color="gray",label="sub"];
n25686 -> n25694[style="dashed",color="gray",label="next"];
n25685 [shape=box,label="(25685)"];
n25685 -> n25686[style="dashed",color="gray",label="sub"];
n25685 -> n25695[style="dashed",color="gray",label="next"];
n25684 [shape=box,label="(25684)"];
n25683 [shape=box,label="(25683)\nthis = this | tmp"];
n25682 [shape=box,label="(25682)"];
n25681 [shape=box,label="(25681)\ntmp = Value"];
n25680 [shape=box,label="(25680)\ntmp = 0"];
n25679 [shape=box,label="(25679)\nvar tmp = Value < 0\n@:cond-branch tmp"];
n25679 -> n25680[style="dashed",color="gray",label="then"];
n25679 -> n25681[style="dashed",color="gray",label="else"];
n25679 -> n25682[style="dashed",color="gray",label="next"];
n25678 [shape=box,label="(25678)\ntmp = 255"];
n25677 [shape=box,label="(25677)\nvar tmp = match * 255\nvar Value = Math.round(tmp)\nthis = Std.int(cast cast cast cast cast this)\nthis = this & -256\nvar tmp\nvar tmp = Value > 255\n@:cond-branch tmp"];
n25677 -> n25678[style="dashed",color="gray",label="then"];
n25677 -> n25679[style="dashed",color="gray",label="else"];
n25677 -> n25683[style="dashed",color="gray",label="next"];
n25676 [shape=box,label="(25676)"];
n25676 -> n25677[style="dashed",color="gray",label="sub"];
n25676 -> n25684[style="dashed",color="gray",label="next"];
n25675 [shape=box,label="(25675)"];
n25675 -> n25676[style="dashed",color="gray",label="sub"];
n25675 -> n25685[style="dashed",color="gray",label="next"];
n25674 [shape=box,label="(25674)"];
n25673 [shape=box,label="(25673)\nvar tmp = (tmp) << 8\nthis = this | tmp"];
n25672 [shape=box,label="(25672)"];
n25671 [shape=box,label="(25671)\ntmp = Value"];
n25670 [shape=box,label="(25670)\ntmp = 0"];
n25669 [shape=box,label="(25669)\nvar tmp = Value < 0\n@:cond-branch tmp"];
n25669 -> n25670[style="dashed",color="gray",label="then"];
n25669 -> n25671[style="dashed",color="gray",label="else"];
n25669 -> n25672[style="dashed",color="gray",label="next"];
n25668 [shape=box,label="(25668)\ntmp = 255"];
n25667 [shape=box,label="(25667)\nvar tmp = Chroma * 255\nvar Value = Math.round(tmp)\nthis = Std.int(cast cast cast cast cast this)\nthis = this & -65281\nvar tmp\nvar tmp = Value > 255\n@:cond-branch tmp"];
n25667 -> n25668[style="dashed",color="gray",label="then"];
n25667 -> n25669[style="dashed",color="gray",label="else"];
n25667 -> n25673[style="dashed",color="gray",label="next"];
n25666 [shape=box,label="(25666)"];
n25666 -> n25667[style="dashed",color="gray",label="sub"];
n25666 -> n25674[style="dashed",color="gray",label="next"];
n25665 [shape=box,label="(25665)"];
n25665 -> n25666[style="dashed",color="gray",label="sub"];
n25665 -> n25675[style="dashed",color="gray",label="next"];
n25664 [shape=box,label="(25664)"];
n25663 [shape=box,label="(25663)\nvar tmp = (tmp) << 16\nthis = this | tmp"];
n25662 [shape=box,label="(25662)"];
n25661 [shape=box,label="(25661)\ntmp = Value"];
n25660 [shape=box,label="(25660)\ntmp = 0"];
n25659 [shape=box,label="(25659)\nvar tmp = Value < 0\n@:cond-branch tmp"];
n25659 -> n25660[style="dashed",color="gray",label="then"];
n25659 -> n25661[style="dashed",color="gray",label="else"];
n25659 -> n25662[style="dashed",color="gray",label="next"];
n25658 [shape=box,label="(25658)\ntmp = 255"];
n25657 [shape=box,label="(25657)\nvar tmp = mid * 255\nvar Value = Math.round(tmp)\nthis = Std.int(cast cast cast cast cast this)\nthis = this & -16711681\nvar tmp\nvar tmp = Value > 255\n@:cond-branch tmp"];
n25657 -> n25658[style="dashed",color="gray",label="then"];
n25657 -> n25659[style="dashed",color="gray",label="else"];
n25657 -> n25663[style="dashed",color="gray",label="next"];
n25656 [shape=box,label="(25656)"];
n25656 -> n25657[style="dashed",color="gray",label="sub"];
n25656 -> n25664[style="dashed",color="gray",label="next"];
n25655 [shape=box,label="(25655)"];
n25655 -> n25656[style="dashed",color="gray",label="sub"];
n25655 -> n25665[style="dashed",color="gray",label="next"];
n25654 [shape=box,label="(25654)"];
n25654 -> n25655[style="dashed",color="gray",label="sub"];
n25654 -> n25696[style="dashed",color="gray",label="next"];
n25653 [shape=box,label="(25653)"];
n25652 [shape=box,label="(25652)"];
n25651 [shape=box,label="(25651)"];
n25650 [shape=box,label="(25650)\nvar tmp = (tmp) << 24\nthis = this | tmp"];
n25649 [shape=box,label="(25649)"];
n25648 [shape=box,label="(25648)\ntmp = Value"];
n25647 [shape=box,label="(25647)\ntmp = 0"];
n25646 [shape=box,label="(25646)\nvar tmp = Value < 0\n@:cond-branch tmp"];
n25646 -> n25647[style="dashed",color="gray",label="then"];
n25646 -> n25648[style="dashed",color="gray",label="else"];
n25646 -> n25649[style="dashed",color="gray",label="next"];
n25645 [shape=box,label="(25645)\ntmp = 255"];
n25644 [shape=box,label="(25644)\nvar tmp = Alpha * 255\nvar Value = Math.round(tmp)\nthis = Std.int(cast cast cast cast cast this)\nthis = this & 16777215\nvar tmp\nvar tmp = Value > 255\n@:cond-branch tmp"];
n25644 -> n25645[style="dashed",color="gray",label="then"];
n25644 -> n25646[style="dashed",color="gray",label="else"];
n25644 -> n25650[style="dashed",color="gray",label="next"];
n25643 [shape=box,label="(25643)"];
n25643 -> n25644[style="dashed",color="gray",label="sub"];
n25643 -> n25651[style="dashed",color="gray",label="next"];
n25642 [shape=box,label="(25642)"];
n25642 -> n25643[style="dashed",color="gray",label="sub"];
n25642 -> n25652[style="dashed",color="gray",label="next"];
n25641 [shape=box,label="(25641)"];
n25640 [shape=box,label="(25640)\nthis = this | tmp"];
n25639 [shape=box,label="(25639)"];
n25638 [shape=box,label="(25638)\ntmp = Value"];
n25637 [shape=box,label="(25637)\ntmp = 0"];
n25636 [shape=box,label="(25636)\nvar tmp = Value < 0\n@:cond-branch tmp"];
n25636 -> n25637[style="dashed",color="gray",label="then"];
n25636 -> n25638[style="dashed",color="gray",label="else"];
n25636 -> n25639[style="dashed",color="gray",label="next"];
n25635 [shape=box,label="(25635)\ntmp = 255"];
n25634 [shape=box,label="(25634)\nvar tmp = match * 255\nvar Value = Math.round(tmp)\nthis = Std.int(cast cast cast cast cast this)\nthis = this & -256\nvar tmp\nvar tmp = Value > 255\n@:cond-branch tmp"];
n25634 -> n25635[style="dashed",color="gray",label="then"];
n25634 -> n25636[style="dashed",color="gray",label="else"];
n25634 -> n25640[style="dashed",color="gray",label="next"];
n25633 [shape=box,label="(25633)"];
n25633 -> n25634[style="dashed",color="gray",label="sub"];
n25633 -> n25641[style="dashed",color="gray",label="next"];
n25632 [shape=box,label="(25632)"];
n25632 -> n25633[style="dashed",color="gray",label="sub"];
n25632 -> n25642[style="dashed",color="gray",label="next"];
n25631 [shape=box,label="(25631)"];
n25630 [shape=box,label="(25630)\nvar tmp = (tmp) << 8\nthis = this | tmp"];
n25629 [shape=box,label="(25629)"];
n25628 [shape=box,label="(25628)\ntmp = Value"];
n25627 [shape=box,label="(25627)\ntmp = 0"];
n25626 [shape=box,label="(25626)\nvar tmp = Value < 0\n@:cond-branch tmp"];
n25626 -> n25627[style="dashed",color="gray",label="then"];
n25626 -> n25628[style="dashed",color="gray",label="else"];
n25626 -> n25629[style="dashed",color="gray",label="next"];
n25625 [shape=box,label="(25625)\ntmp = 255"];
n25624 [shape=box,label="(25624)\nvar tmp = mid * 255\nvar Value = Math.round(tmp)\nthis = Std.int(cast cast cast cast cast this)\nthis = this & -65281\nvar tmp\nvar tmp = Value > 255\n@:cond-branch tmp"];
n25624 -> n25625[style="dashed",color="gray",label="then"];
n25624 -> n25626[style="dashed",color="gray",label="else"];
n25624 -> n25630[style="dashed",color="gray",label="next"];
n25623 [shape=box,label="(25623)"];
n25623 -> n25624[style="dashed",color="gray",label="sub"];
n25623 -> n25631[style="dashed",color="gray",label="next"];
n25622 [shape=box,label="(25622)"];
n25622 -> n25623[style="dashed",color="gray",label="sub"];
n25622 -> n25632[style="dashed",color="gray",label="next"];
n25621 [shape=box,label="(25621)"];
n25620 [shape=box,label="(25620)\nvar tmp = (tmp) << 16\nthis = this | tmp"];
n25619 [shape=box,label="(25619)"];
n25618 [shape=box,label="(25618)\ntmp = Value"];
n25617 [shape=box,label="(25617)\ntmp = 0"];
n25616 [shape=box,label="(25616)\nvar tmp = Value < 0\n@:cond-branch tmp"];
n25616 -> n25617[style="dashed",color="gray",label="then"];
n25616 -> n25618[style="dashed",color="gray",label="else"];
n25616 -> n25619[style="dashed",color="gray",label="next"];
n25615 [shape=box,label="(25615)\ntmp = 255"];
n25614 [shape=box,label="(25614)\nvar tmp = Chroma * 255\nvar Value = Math.round(tmp)\nthis = Std.int(cast cast cast cast cast this)\nthis = this & -16711681\nvar tmp\nvar tmp = Value > 255\n@:cond-branch tmp"];
n25614 -> n25615[style="dashed",color="gray",label="then"];
n25614 -> n25616[style="dashed",color="gray",label="else"];
n25614 -> n25620[style="dashed",color="gray",label="next"];
n25613 [shape=box,label="(25613)"];
n25613 -> n25614[style="dashed",color="gray",label="sub"];
n25613 -> n25621[style="dashed",color="gray",label="next"];
n25612 [shape=box,label="(25612)"];
n25612 -> n25613[style="dashed",color="gray",label="sub"];
n25612 -> n25622[style="dashed",color="gray",label="next"];
n25611 [shape=box,label="(25611)"];
n25611 -> n25612[style="dashed",color="gray",label="sub"];
n25611 -> n25653[style="dashed",color="gray",label="next"];
n25610 [shape=box,label="(25610)\nvar ` = Std.int(hueD)\nnull\n@:cond-branch `"];
n25610 -> n25611[style="dashed",color="gray",label="case 0"];
n25610 -> n25654[style="dashed",color="gray",label="case 1"];
n25610 -> n25697[style="dashed",color="gray",label="case 2"];
n25610 -> n25740[style="dashed",color="gray",label="case 3"];
n25610 -> n25783[style="dashed",color="gray",label="case 4"];
n25610 -> n25826[style="dashed",color="gray",label="case 5"];
n25610 -> n25869[style="dashed",color="gray",label="next"];
n25609 [shape=box,label="<function-end>
(25609)"];
n25608 [shape=box,label="<function-begin>
(25608)\nvar chroma = Brightness * Saturation\nvar match = Brightness - chroma\nvar Hue = Hue\nvar Chroma = chroma\nHue = Hue % 360\nvar hueD = Hue / 60\nvar tmp = hueD % 2\nvar tmp = tmp - 1\nvar tmp = Math.abs(tmp)\nvar tmp = 1 - tmp\nvar tmp = chroma * tmp\nvar mid = tmp + match\nChroma = chroma + match"];
n25608 -> n25610[style="dashed",color="gray",label="sub"];
n25608 -> n25870[style="dashed",color="gray",label="next"];
n1 [shape=box,label="<root>
(1)"];
}
